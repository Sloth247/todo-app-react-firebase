@use '../sass/variables';
@use '../sass/mixins';

.task {
  &-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1.25rem;
    border: 1px solid transparent;
    font-size: 0.75rem;
    color: variables.$color-very-dark-gray-blue;
    border-bottom: 1px solid variables.$color-very-light-gray-blue;
    &.dark {
      color: variables.$color-light-gray-blue-darkmode;
      border-bottom: 1px solid variables.$color-very-dark-gray-blue-darkmode;
    }
    @include mixins.mq(medium) {
      padding: 1.25rem 1.5rem;
    }
  }
  &-inner {
    display: flex;
    align-items: center;
  }
  &-description {
    @include mixins.mq(medium) {
      font-size: 1.125rem;
    }
    &.checked {
      text-decoration: line-through;
      color: variables.$color-light-gray-blue;
      &.dark {
        color: variables.$color-tasklist-body;
      }
    }
  }
}

.tasklist {
  &-container {
    background: #fff;
    border-radius: 5px;
    margin-bottom: calc(6.5rem - 1.75rem);
    box-shadow: 20px 20px 20px rgba(0, 0, 0, 0.03);
    transform: translateY(-1.75rem);
    &.dark {
      background-color: variables.$color-very-dark-desaturated-blue;
    }
    @include mixins.mq(medium) {
      transform: translateY(-3.375rem);
      margin-bottom: calc(3rem - 3.375rem);
    }
  }
  &-lastrow {
    position: relative;
    display: flex;
    justify-content: space-between;
    padding: 1.125rem 1.25rem;
    color: variables.$color-dark-gray-blue;
    font-size: 0.75rem;
    &.dark {
      color: variables.$color-tasklist-body;
    }
  }
}

.checkbox-container {
  position: relative;
}

/* custom checkbox */
input[type='checkbox'] {
  width: 1.25rem;
  height: 1.25rem;
  position: absolute;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  opacity: 1;
  cursor: pointer;

  &::after {
    content: '';
    width: 1.25rem;
    height: 1.25rem;
    border-radius: 50%;
    position: absolute;
    border: 1px solid variables.$color-light-gray-blue;
    top: -0.7rem;
    left: -0.5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    &.dark {
      border: 1px solid variables.$color-dark-gray-blue-darkmode;
    }
  }
  &:hover::after,
  &:focus::after {
    background: variables.$bg-check;
    border: none;
    -webkit-mask: linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    padding: 1px;
  }
  &:checked::after {
    content: url('../images/icon-check.svg');
    background: variables.$bg-check;
    border: none;
    -webkit-mask: unset;
    mask: unset;
    -webkit-mask-composite: unset;
    mask-composite: unset;
    padding: 0;
  }
}

.checkbox {
  &.dark::after {
    border: 1px solid variables.$color-dark-gray-blue-darkmode;
  }
}

.filter-btn {
  font-weight: bold;
  font-size: 0.875rem;
  color: variables.$color-dark-gray-blue;
  &.dark {
    color: variables.$color-tasklist-body;
    &:hover,
    &:focus {
      color: variables.$color-light-gray-blue-hover;
    }
  }

  &:hover,
  &:focus {
    color: variables.$color-very-dark-gray-blue;
  }

  &:not(:last-child) {
    margin-right: 1rem;
  }

  &:active {
    color: variables.$color-blue;
  }
  &-container {
    position: absolute;
    padding: 1rem 1.25rem;
    left: 0;
    bottom: -4rem;
    width: 100%;
    display: flex;
    justify-content: center;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.03);

    &.dark {
      background-color: variables.$color-very-dark-desaturated-blue;
    }
    @include mixins.mq(medium) {
      position: unset;
      padding: 0;
      width: auto;
      background-color: transparent;
      border: none;
    }
  }
  &.activated {
    color: variables.$color-blue;
  }
}
.clear-btn {
  color: variables.$color-dark-gray-blue;
  &.dark {
    color: variables.$color-tasklist-body;
    &:hover,
    &:focus {
      color: variables.$color-light-gray-blue-hover;
    }
  }
  &:hover,
  &:focus {
    color: variables.$color-very-dark-gray-blue;
  }
}
